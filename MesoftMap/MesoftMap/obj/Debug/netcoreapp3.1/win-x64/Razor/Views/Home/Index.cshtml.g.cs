#pragma checksum "E:\GitHub\MesoftMap\MesoftMap\Views\Home\Index.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "3262b225b0ddca2d29f593a8b776c30266546446"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Home_Index), @"mvc.1.0.view", @"/Views/Home/Index.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "E:\GitHub\MesoftMap\MesoftMap\Views\_ViewImports.cshtml"
using MesoftMap;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "E:\GitHub\MesoftMap\MesoftMap\Views\_ViewImports.cshtml"
using MesoftMap.Models;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"3262b225b0ddca2d29f593a8b776c30266546446", @"/Views/Home/Index.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"87ea3767442cde31ec2a82071412ec54a1750428", @"/Views/_ViewImports.cshtml")]
    public class Views_Home_Index : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/js/MesoftMap/MyMap.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_1 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/js/MesoftMap/MesoftCustomOverlay.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_2 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/js/MesoftMap/CustomOverlayObject.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_3 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/js/Vue/jquery-2.2.2.min.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_4 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/js/colorPicker/jquery.classycolor.min.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_5 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/js/MesoftMap/MapFunctions.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        #pragma warning restore 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#nullable restore
#line 1 "E:\GitHub\MesoftMap\MesoftMap\Views\Home\Index.cshtml"
  
    ViewData["Title"] = "地图应用";

#line default
#line hidden
#nullable disable
            WriteLiteral(@"<style type=""text/css"">
    * {
        margin: 0px;
        padding: 0px;
    }
    .loading {
        z-index: 2000;
        padding: 5px 0 5px 29px;
        background: url(/images/loading_red.gif) no-repeat 10px top;
        top: 50%;
        left: 50%;
        width: 90px;
        position: fixed;
        height: 21px;
        margin-left: -45px;
        margin-top: -10px;
        display: block;
    }
    body, button, input, select, textarea {
        font: 12px/16px Verdana, Helvetica, Arial, sans-serif;
    }

    #info {
        /*width: 603px;*/
        padding-top: 3px;
        overflow: hidden;
    }

    .btn {
        /*width: 190px;*/
    }

    #mapContainer {
        min-width: 600px;
        min-height: 700px;
    }

    [v-cloak] {
        display: none;
    }

    .wtooglea {
        background-color: #718BD6;
        font-family: ""Times New Roman"", Times, serif;
        font-size: 10px;
        color: #FFFFFF;
        text-decoration: none;
");
            WriteLiteral(@"        cursor: default;
    }

    .divcss5-right {
        right: 40px;
        width: 200px;
        text-align: right;
    }

    .opacityImage {
        opacity: 0.3;
        filter: alpha(opacity=30); /* 针对 IE8 以及更早的版本 */
    }

        .opacityImage:hover {
            opacity: 1.0;
            filter: alpha(opacity=100); /* 针对 IE8 以及更早的版本 */
        }
</style>

<script charset=""utf-8"" src=""https://map.qq.com/api/js?v=2.exp&key=K2XBZ-OHEK6-RP2S5-M575M-EXDQV-6LBJZ""></script>
");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "3262b225b0ddca2d29f593a8b776c302665464466977", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "3262b225b0ddca2d29f593a8b776c302665464468016", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_1);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "3262b225b0ddca2d29f593a8b776c302665464469055", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_2);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "3262b225b0ddca2d29f593a8b776c3026654644610094", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_3);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral(@"
<script src=""/js/Vue/vue.min.js""></script>

<div id=""myapp"" v-on:keydown=""onKeyDown"" v-on:keypress=""onKeyPress"">
    <div v-if=""showLoading"" class=""loading""></div>
    <input id=""justFocus"" type=""text"" width=""10"" style=""position:absolute;left:0;margin-left:-800px;"" />
    <div :style=""{display:LeftSideVisible?'block':'none'}"" class=""layui-side layui-bg-black"">
        <div class=""layui-side-scroll"">
            <div class=""layui-nav layui-nav-tree horizon-center"" lay-filter=""test"">
                <div class=""layui-nav-item layui-nav-itemed"">

                    <p style=""left:0;margin-left:-50px;"">
                        显示坐标：
                        <input type=""checkbox"" v-model=""mapDisplayOption.displayLatLng"" v-on:change=""displayLatLng"" value=""显示坐标"" />
                    </p>

                    <p style=""left:0;margin-left:-20px;"">
                        <div v-if=""!isAddingRegion"">
                            显示区域
                            <input type=""checkbox"" value=""0"" v-m");
            WriteLiteral("odel=\"mapDisplayOption.isDisplayRegions\" v-on:change=\"displayRegionsChange\" />   ");
            WriteLiteral(@"
                        </div>

                        <input v-if=""!this.selectedRegion.id && (!isAddingRegion && !isEditingRegion)"" type=""button"" v-on:click=""addRegions"" id=""btnAddRegion"" value=""添加区域"">
                        <br />
                        <div v-if=""this.selectedRegion.id && (!isAddingRegion && !isEditingRegion && !isEditingRegionColor)"">
                            <input type=""button"" v-on:click=""onDeleteRegion"" value=""删除区域""><br />
                            <input type=""button"" v-on:click=""onEditRegion"" value=""修改区域"">
                            <input v-if=""mapDisplayOption.canSetRegionColor"" type=""button"" v-on:click=""onEditRegionColor"" value=""区域颜色""><br />
                        </div>

                    </p>
                    <div v-if=""isAddingRegion || isEditingRegion"">
                        <p style=""left:0;margin-left:-50px;margin-top:-20px;"">
                            区域名称：
                            <input id=""nameInput"" type=""text"" style=""width:100px;");
            WriteLiteral(@""" v-model=""regionName"" placeholder=""请输入区域名称"" />
                        </p>

                        <p style=""margin-top:-18px;margin-left:-20px;"">
                            <input type=""button"" v-on:click=""saveRegion"" value="" 保  存 "" style=""padding-left:5px;padding-right:5px;"">
                            &nbsp; &nbsp;
                            <input type=""button"" v-on:click=""endSetRegion"" value="" 取  消 "" style=""padding-left:5px;padding-right:5px;"">
                        </p>
                    </div>
                    <div :style=""{display:isEditingRegionColor?'block':'none'}"">
                        <p style=""left:0;margin-left:-50px;margin-top:-20px;"">
                            设置区域颜色和轮廓颜色：
                        </p>
                        <p>
                            <div class=""color-box"" style=""left:0;margin-left:-70px;margin-top:-35px;"">
                                <div id=""fillColor"" title=""区域颜色"" class=""colorpicker""></div>
                            </div>
   ");
            WriteLiteral(@"                     </p>

                        <div class=""color-box"" style=""left:0;margin-left:-70px;margin-top:-60px;"">
                            <div id=""strokeColor"" title=""轮廓颜色"" class=""classypicker2""></div>
                        </div>
                        <p style=""margin-top:-18px;margin-left:-20px;"">
                            <input type=""button"" v-on:click=""saveRegionColor"" value="" 保  存 "" style=""padding-left:5px;padding-right:5px;"">
                            &nbsp; &nbsp;
                            <input type=""button"" v-on:click=""cancelSetRegionColor"" value="" 取  消 "" style=""padding-left:5px;padding-right:5px;"">
                        </p>
                    </div>
                </div>
                <div id=""mapClassDisplayOption"" class=""divcss5-right""
                     :style=""{position:'absolute',top:mapDisplayOption.position_TopOfMapClassDisplayOption,left:'-65px',bottom:'20px'}"">

                    <br /><br />
                    <p style=""right:0;"">
  ");
            WriteLiteral("                      显示全部标注\r\n                        <input type=\"checkbox\" value=\"0\" v-model=\"mapDisplayOption.isDisplayAllMarkers\" v-on:change=\"displayMapClass\" />   ");
            WriteLiteral("\r\n                    </p>\r\n                    <p style=\"margin-top:6px;\">\r\n                        土壤污染防治重点监管企业\r\n                        <input type=\"checkbox\" v-model=\"markerClassVisible[0]\" value=\"1\" v-on:change=\"displayMapClass\" />   ");
            WriteLiteral("\r\n                    </p>\r\n                    <p>\r\n                        涉重金属企业\r\n                        <input type=\"checkbox\" v-model=\"markerClassVisible[1]\" value=\"2\" v-on:change=\"displayMapClass\" />   ");
            WriteLiteral("\r\n                    </p>\r\n                    <p>\r\n                        危险废物经营单位\r\n                        <input type=\"checkbox\" v-model=\"markerClassVisible[2]\" value=\"3\" v-on:change=\"displayMapClass\" />   ");
            WriteLiteral("\r\n                    </p>\r\n                    <p>\r\n                        污染地块及开发利用负面企业\r\n                        <input type=\"checkbox\" v-model=\"markerClassVisible[3]\" value=\"4\" v-on:change=\"displayMapClass\" />   ");
            WriteLiteral("\r\n                    </p>\r\n                    <p>\r\n                        疑似污染地块企业\r\n                        <input type=\"checkbox\" v-model=\"markerClassVisible[4]\" value=\"5\" v-on:change=\"displayMapClass\" />   ");
            WriteLiteral("\r\n                    </p>\r\n                    <p>\r\n                        地下水监测点位\r\n                        <input type=\"checkbox\" v-model=\"markerClassVisible[5]\" value=\"6\" v-on:change=\"displayMapClass\" />   ");
            WriteLiteral(@"
                    </p>
                </div>
            </div>


        </div>
    </div>
    <div style=""position:absolute;left:0px;"">
        <div v-if=""!LeftSideVisible"" style=""position:absolute;left:0px;top:300px;z-index:1001"">
            <a v-on:click=""switchLeftSide"" href=""javascript:;"" class=""wtoogle"">►</a>
        </div>
        <div v-if=""LeftSideVisible"" style=""position:absolute;left:200px;top:300px;z-index:2000"">
            <a href=""javascript:;"" v-on:click=""switchLeftSide"" class=""wtoogle"">◄</a>
        </div>
    </div>
    <div class=""layui-body"" :style=""{left:LeftSideVisible?'200px':'0',top:LeftSideVisible?'20px':'0',
         bottom:LeftSideVisible?'43px':'0', height:LeftSideVisible?'':'100%'}"">

        <div id=""mapContainer"" :style=""{height:LeftSideVisible? '800px':'900px'}""></div>


    </div>
</div>




");
            DefineSection("scripts", async() => {
                WriteLiteral("\r\n");
                WriteLiteral("    ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "3262b225b0ddca2d29f593a8b776c3026654644618458", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_4);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\r\n    ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "3262b225b0ddca2d29f593a8b776c3026654644619558", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_5);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral(@"
    <script>

        $('#justFocus').focus();
        vm.setDisplayAllMarkers(false);
                $(document).ready(function () {
                    //$('#fillColor').ClassyColor({
                    //    color: 'rgba(198, 144, 32, 1.00)',
                    //    colorSpace: 'rgba',
                    //    labels: true,
                    //    displayColor: 'css',
                    //});
                    //$('#strokeColor').ClassyColor({
                    //    color: 'rgba(38,145,234,0.5)',
                    //    colorSpace: 'rgba',
                    //    labels: true,
                    //    displayColor: 'css',
                    //});
                });
    </script>
");
            }
            );
            WriteLiteral("\r\n\r\n");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
